%% Group Lasso + L2 prior on remaining weigths
if(strcmp(distr,'normal'))
    mean_log_sig2 = log(beta_sigma2)-psi(alpha_sigma2);
    logdet = log(det(1 + (b./(c.^2))'*b)) + sum(log((c.^2)));   
    constMean = -(alpha0_sigma2+1)*mean_log_sig2 - beta0_sigma2*mean_sigma2_inverse...
         +0.5*sum(2*(n_units(1)+1)*log(shrinkage_gamma)- (shrinkage_gamma.^2).*mean_tau)...
         -0.5*datasize*mean_log_sig2+gammaln(alpha_sigma2)...
         -alpha_sigma2*log(beta_sigma2)+(alpha_sigma2+1)*mean_log_sig2...
         +alpha_sigma2-0.5*(sum(log(lambda_tau))-p)+0.5*logdet...
         +0.5*d_w_tilde*log(shrinkage_l2)-0.5*shrinkage_l2*mean_w_tilde...
         -0.5*sum(mean_column_j_tilde'.*mean_inverse_tau);
else
    logdet = log(det(1 + (b./(c.^2))'*b)) + sum(log((c.^2)));   
    constMean = 0.5*sum(2*(n_units(1)+1)*log(shrinkage_gamma)-(shrinkage_gamma.^2).*mean_tau)...
         -0.5*(sum(log(lambda_tau))-p)+0.5*logdet+0.5*d_w_tilde*log(shrinkage_l2)...
         -0.5*shrinkage_l2*mean_w_tilde-0.5*sum(mean_column_j_tilde'.*mean_inverse_tau);
end

%  lb(iter) = (a1+constMean+const)/datasize;
 
% a3 = alpha0_sigma2*log(beta0_sigma2)-gammaln(alpha0_sigma2)...
%      -0.5*p*n_units(1)*log(2*pi)-0.5*d_w_tilde*log(2*pi)...
%      -p*gammaln((n_units(1)+1)/2)-0.5*datasize*log(2*pi)...
%      +p/2*log(2*pi)+0.5*d_theta*log(2*pi)+d_theta/2;



% lb(iter) = alpha0_sigma2*log(beta0_sigma2)-gammaln(alpha0_sigma2)-...
%     (alpha0_sigma2+1)*mean_log_sig2 - beta0_sigma2*mean_sigma2_inverse...
%     -0.5*p*n_units(1)*log(2*pi)-0.5*sum(mean_column_j_tilde'.*mean_inverse_tau)...
%     -0.5*d_w_tilde*log(2*pi)+0.5*d_w_tilde*log(shrinkage_l2)-...
%     0.5*shrinkage_l2*mean_w_tilde-p*gammaln((n_units(1)+1)/2)+...
%     0.5*sum(2*(n_units(1)+1)*log(shrinkage_gamma) - (shrinkage_gamma.^2).*mean_tau)...
%     -0.5*datasize*log(2*pi)-0.5*datasize*mean_log_sig2-...
%     0.5*mean_sigma2_inverse*sum_squared+gammaln(alpha_sigma2)-...
%     alpha_sigma2*log(beta_sigma2)+(alpha_sigma2+1)*mean_log_sig2 + alpha_sigma2...
%     +p/2*log(2*pi)-0.5*(sum(log(lambda_tau))-p)+0.5*d_theta*log(2*pi)+0.5*logdet+...
%     d_theta/2 -0.5*((grad_llh'*b)^2+ sum((c.^2).*(grad_llh.^2)))
